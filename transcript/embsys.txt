welcome to this course on embedded systems 
today we shall discuss what embedded systems are and before going into what they are lets look at the syllabus that we shall follow 

these provides a broad outline of the course that we shall be covering in forty lectures
we shall cover the processors a bus structures interfacing issues we see a look at software optimization of the program also real time OS issues  
we shall have occasion to examine different aspects of network embedded systems as well
this a some sets of books that you may follow there are various other books available in the market you can refer to them as well
but these are the five books which action primarily follow in this course 

lets start with the definition of an embedded system 
what is an embedded system  micro
 
any device that includes a computer but is not itself a general purpose computer 
it has hardware as well as software and it is apart of a larger system and its expected to function without human intervention
an embedded system is expect to expect to respond monitor as well as control external environment using sensors and actuators
 so basically what we are talking about is embedding a computer 

embedding a computer into an applies and that computer is not expected to be used for general purpose computer 
since it is embedded into an plants it did to interact to the external world so it has got analog interfaces 
and the model that i am showing it’s a simplest possible model that you can have of an embedded system 
lets looks at the examples 

examples are personal digital assistance printers that used in computers cell phone all of us family are with
automobiles in fact automobiles you got a number of microcontrollers and it’s a actually an embedded networks computing system 
television in television from various purposes microcontrollers are used as well household appliances 
lets physically see some of this examples   
here we have got appediate this is a digital camera this is a cell phone and all of these embedded systems actually have not one microcontrollers sitting inside but more than one microcontroller sitting inside okay
and that’s why managing these microcontrollers designing there hardware designing the software for managing this a planes those are different channels challenge than the adopt designing a general purpose computer
so lets go back to um the other example which is that our surveillance system in fact surveillance system oblate has got tremendous important because of various security reasons
so your video cameras your um your video cameras as well as your biometric systems which at using smart cards etcetera 
they are also part of embedded systems 

so these are um again another example of palm that is appeared and what i would like to show is in this cases the different types of microcontroller that have been used 
this pdi users are thirty two bit microcontroller another example is that our cell phone it uses also of thirty two bit microcontroller 
then if you look at how so a planes example front panel of microwave oven that also uses a microcontroller but typically it will have its words size much smaller than that of the all our examples 

because the functionality that it handles is much less 
then if you come back again to the camera in fact that the camera that i we had seen few minutes back that uses a again a thirty two bit processor because it handles complex functions 
similarly in an analog to we our simpler microcontroller then that in a digital TV because in an analog TV in the microcontroller handles primarily the problem of tuning and channel selection 
but in a digital TV decompression disk family and particularly on the set of box your microcontroller handles a number of complex functions

lets look at an automobile system today’s as sophisticated automobile may have more than hundred microprocessors 
of four bit microcontroller can check the tension of the seat belt 
microcontrollers can run the display services on the dashboard also it will control the engine and sees the engine controlling is the most complex function it has got the most powerful microcontroller that is sixteen or thirty two bit microcontroller 
lets look an architecture of such a system of breaking system this is another aspect of an automobile 

so what we have found here is so we have got sensors this sensors actually sensors the speed and these are the break which are control by hydraulic pump and your embedded system is this automated breaking system 
which receives input from the sensors and then depending on the software that is running in the automated breaking system actuate the hydraulic pump to control the break 
so this is an example of a control system begin implemented through the help of microcontrollers in an automobile
therefore what are the characteristics of embedded systems

first thing is the all implement sophisticated functionality the degree of sophistication can vary from a plans by plans
this satisfy real time operation is it always true its not necessarily true and what is the real time operation we shall comeback to this point slightly later on 
the should have in many cases low manufacturing cost but cost itself is an issue which request further closer examination
in many cases this a plans to uses application dependent processors and not general purpose processors which we find in computers 
they need to work with restricted memory and the most important consideration is that of a power 
because many of the devices are actually battery operator also when we do not have battery operator devices that is val mounter devices powered from direct power supply 
then power consumption becomes an important issues because i need to do a heat management heat dissipation design for this devices which can add on to the cost of the embedded system
so lets look at this issue of manufacturing cost
 
there are two aspects first aspect is what we call non recurring engineering cost which is actually the development cost into that system 
the other aspect of the cost is production and marketing each unit          
if you are targeting um mass market then what we need to optimize is a production marketing cost 
but if you a trying to develop a very specialize application then I can invest into enary as well as i may combines set for high production cost 
say for example if i am designing um an automated system for an aircraft i can invest money for its development i can used highly sophisticated recruitments but the same flexibility is not with me when i am designing as cell phone or low cost cell phone aiming to serve a mass market 
so the based technology choice will there to depend on the number of units with plans to produce       
now lets to come back to this issue of real time operation that will started with 
what is the real time operation the basic definition is then operations must be completed by deadlines 
so i have a deadline so real time operation must be completed within headline 
we have two kinds of real time headlines hard real time headlines and soft real time headlines and occluding also we classify real time systems
in a hard real time systems we cannot really miss a deadline if you are talking about an automatic reactor control if I miss a deadline then they can be a catesed    
on the other hand for a soft real time systems we can at times miss deadline see for example when we are playing a video on a laptop 

even if we cannot decode a frame in time nothing catesed happens only in distance you viewing experience 
many systems are also multi-rate that means this embedded systems are receiving inputs from the external worlds and these inputs can come at different rates
so they need to handle this different rate inputs and we um call them therefore multi-rate systems 
there also various application dependent requirements in many cases just take for example an aircraft system with definitely needs fault tolerance also for medical equipments when we are monitoring accritical person using an embedded system we do need fault tolerance and reliability 
further the systems must be safe systems um avoid physical or economic damage to person as well as property 
further if they are dedicated systems then the design consideration obviously different because they are not expect it to the programmed on a regular basics 
so what we will say the programmability of this systems would be really used during the right lifetime of the system 
that means nonce programmed this systems um expected to execute infinitely for a large duration of an time without users intervention
and they are expected to be programmed or design for specific task and therefore they are basically what we call dedicated systems 
just try to look at some more examples    
examples from the outside world 

this is an example of an vending machine we have seen in the vending machine are various um points and they are all actually embedded systems and in these embedded systems its not only the electronic part which is important you can realize but the mechanical part is also critical important 
because you have to finally deliver the goals and accept the cache these example is an old vending machine which users eight bit Motorola microcontroller 
and this is and new a vending machine okay which is um actually two thousand three two thousand four introduction product
this is an web enabled  cashless vending machine 
so you can see that a simple task of delivering a good in response to the cash input now has been change into an web enabled device 
and what is that advantage because of the web enabling the stock can be monitor remotely the whole cash transactions can be through your credit cards or smart cards 
as well as the security also can be monitored from a remote location this has happen again because you are brought in sophisticated processors sophisticated functionalities on to this vending machine 

this another example this is NASA’s mars rover and this is an old um robot it’s a mobile robot and it users an eight bit Intel microprocessor in fact this is the variant 80C85 it’s a variant of 8085 microprocessor which you may be familiar with and this is um robot which move down mars             
    
this is another product it’s a GPS receiver global positioning system which actually enables any any transport vehicle to deprovement  its location 
an for automotive systems which provides automated navigational tool this GPS receivers becoming a very common place these are all embedded system 
here a very critical component is the communication equipment it has two receive input from the satellite as well as it has to provide output regarding its positions as well as its display 
because display is critically important here when it is being used as a navigational tool
this is an MP3 player various versions of MP3  players you are using they are all embedded systems
 
what is the MP3 
MP3 is actually a what um compress form of audio okay and since we need to decompress audio to play i need to do computational task 
apprentic sophisticated computational task that’s why we will find that the microprocessor that is being used here it’s a thirty two bit risk microprocessor       

this is an another example of a DVD player the same issue is applicable here why
because your DVD has got PDO in a complex form so i need to do decompression and decompression what rate at a video rate video rate means what twenty five hertz
so effectively of about forty milliseconds to decompress of video file so i need also in this case aprentic sophisticated microprocessor to work with 
so i have got a thirty two bit RISC microprocessor 

this is um Sony Aibo Robotic dog and it was very popular pet in Japan and it users just note it
this is the most complex microprocessor or a microcontroller that we have seen so for reduces sixty four bit neat processor 
it uses sixty four bit neat processor why because it has to a handle and number of complex tasks
it has to coordinate its emotions that means its need to control the manipulator its needs to do sensing its also need to communicate 
because it also has the communication facility and if you a familiar with this robo cup that is the computational robo football between different robotics teams in fact this sony Aibo robotics dog has been extensible used okay
and it has been built into various in question algorithms into to detect the ball 
how to through the balls towards a goal 
so all these complex functionalities have been built into it so it request pretty sophisticated processors to handle it tasks
so it is using sixty four bit MIPS RISC 
so now lets come to what are the different types of a embedded system we have seen variety of examples 

now lets classify the examples into different types some as similar to general computing like PDA video games set of boxes automatic teller machines 
why this similar to general  computing 
the similar to general computing is a um because if you take PDA the maturity of the task that you do is a restricted form of the task that you do on a computer 

similar thing is the video games okay you provide the input the user provides a input and it expect some output 
they note really sensing external environment on its own as well as they are not activating any actuator on its own that would influence or change the external world
so these devices are more like a general purpose computing machines they respond to users input others and others side i got control system 
whose basic job is that a sensing and actuating the feedback control of real time system various real time systems i need a feedback  control depending on the external input i need the control to take some actions 
i mean examples of user’s vehicles engine foal injection to be control flight control nuclear reactors
these are all examples of embedded systems which belongs to the category of control systems 
next we have signal processing because here the core job or basic focus is signal processing 
your MP3 players your DVD players radar control system because in a radar although there is a control system the basic job is précising of the deter
similarly a sonar system they are all example the signal processing systems and communication and networking is another category of which the most common example is your cellular phones 
and now we are getting a number of internet a planes in fact the web enable vending machine is an example of this kind of an internet appliance      
so what are the different kind of functions that an embedded system is expected  to implement

first is if it has got the actuation sensing an actuation as a basic task it must realize some control of it has to realize a control
second important issue is that they has to be a sequencing logic 
this sequencing logic is obviously task specific and its not a general purpose sequencing logic it could have a task specific sequencing logic implemented into way 
third thing is that it should have signal processing if it is require and wherever and where we are interfacing and embedded system with external sense to be input we need signal processing 
so in many cases even when the signal processing is not core activity we need signal processing ability to deal with sense your inputs 
next thing is application specific interfacing because application will tell as what kind of senses and what kind of actuated to be interconnected and accludingly  we should have that interface
this interfacing implies both hardware as well as software 
next thing fault response what happens when a fault occurs 
the basic issue or basic design philosophy for fault response is what we known as what we call graceful depredation cattest traffic failure should not happening the system should tell users that things are failing and graceful it would decreed  

say for example battery failure they should be message to the user saying that battery is low  
so user can take some action its should not suddenly stop its activity all of a sun 

so graceful degradation is another important function which is to be implement 
so lets look at now a more complete architecture of the embedded system we have seen the simplest model and now we shall make it more complex 
because we have now understood what are its requirements we have also reviewed some of the examples 
so now lets look at the more complex example 

so what are the things which are involved here what i have shown if you if you go back to the previous modal 
i have know expanded the basic block have expanded the basic block and have added something more to the basic block 
in the basic block earlier i adjust shown the CPU the alum its CPU now we are showing obvious the memory 
because memory will have the software to control the system also we are showing analog to digital converters and digital to analog converters
This AD conversion blocks actually provides a interface to the sensor here and DA conversion block actually provides interface to the actuators 
because an embedded system which is situated in a environment is expected to receive sensor inputs and actuate the actuators to change the external environment 
so these two are very essential and integral component in majority of your embedded systems
here are shown an FPGA or ACID block why because in many cases my CPU may not have the ability to execute my software satisfying real time  circumstance 
under those circumstance is i might need special hardware to come or interface with my CPU
so that can be implemented on an FPGA and ACID can be used alumeter CPU 
now lets look an order issues one is obviously on the CPU we need to implement with the CPU the human interface 
if you are talking about um any kind of reading to be obtain to the embedded systems any control functions to be altered by the human users I need a human interface
so this interface becomes an important component 
so you will find in many cases you have an LCD display panel or a simple um simple LED based informative um color color codes by which user can be informed what is happening inside 
also there are diagnostic tools why diagnostic tools because this although this systems are expected to work forever there are obviously for ability is a failure and if a failure occurs 
how to trace that failure can you be repaired or simply it has to be taken out and thrown away okay
so if it has to be repaired i need to have diagnostic tools to interface and check whether it is working 
second important thing why diagnostic tools are important that why in the system is starting up or system is working on a even a continuous base is its should do some self check to know whether all the parts of it is functioning properly or not 

because if all the parts are not functioning properly what can happen it can actually the do damage to the users
because of malfunctioning of some hardware components 
so it is also exceptive to do some self check at regular basics 
so diagnostics tools form also an essential component and you have the auxiliary  systems which are to be dealt with power
because if there is a powered to dissipation when cooling becomes an essential component           
so how to design the cooling circuit how to take here of extra heat dissipations and um the mechanical aspect of it design becomes important obviously the  casing 
the casing the whole system should properly packaged 
if it is not properly packaged um in the packaging should be as per the requirement of the external environment in which the embedded system is exceptive to be pleased  
so this packaging becomes a very very important 
and an in fact if you look at this packaging issue this if your packaging is not properly designed even or good well design system can fail
because then because of the bad packaging the system can get and say for example moister okay 
the moister can go in an effective electronics then heat can effective electronics so all these mechanical aspect of the design becomes extrument point    
although in the course we shall not discuss those mechanical aspects of an embedded system design 
but please be concuss about the fact that these aspects are very very important for any kind an appliances design and implementation 
so now if you know these as an architecture so how to implement an embedded system 

and this is exactly will be the focus of our course we shall on more about what is presented in the slide we shall discuss obviously the processing elements 
the processing elements are basically your microprocessors and microcontrollers
we shall look at the peripheral devices because input an output devices becomes a critical component in this context 
and also how to interface sensors and actuators and there also there are various kinds of interfacing protocols which can vary from one sensors to another sensors  
then you have got memory also in the bus design 
so these are different aspects of an hardware of an embedded system and if you look into it these aspects of the hardware are very very similar to a general purpose computing
there is no basic different conceptually from that of a general purpose computing 

the only issue which is of important is these aspects in a general purpose computer we tend to talk about standard input output devices
although that set is getting expanded day by day but we tend to talk about standard input output devices  
but here the set of input output devices a large because there can be different kind of sensors and its sensor has got it own characteristics 
and therefore i need to you will find that particularly the processors which are targeted for embedded applications will have very sophisticated and a complex mechanisms in many cases even simpler mechanisms not only complex mechanism to interface with external devices and external IO devices in particular 
then we come to the software here also we fill find that I have talked about system software and application software which is again very very similar what we have for a general purpose computing needs 
but here the system software is got various components 
one aspects of VSD all of as know what are systems software what s system software typically we talk about assemblers compilers that is language translators i have clause of system software 
the other clause of system software or operating systems 
now majority of the cases embedded systems will have specialized operating systems and not general purpose operating system like your window units order variance of them 
there would be specialized operating system because they should satisfy certain caricaturists of the embedded system 
and the most important characteristics is what the OS which you encounter in general purpose computing system um
they have been designed to satisfy the general purpose need the requirements of a programming for um various needs and task 
but in this case this embedded systems are dedicated so its OS  are also tuned for that kind of a requirement
they also have the real time scheduling features because in many cases we require real tome scheduling  
but apart from these OS in a general purpose computer you also compilers your compilers which compile your high level language code to the target machine code to be executed on that system 
but incase of an embedded systems you will find what we call cross assemblers and cross compilers and various kinds of other development tools 
because its entire development process that is your high level language program specifying in the software would take place and on a whole system and not exactly on the target processor 
after you have tested may be the software and everything the software will be loaded onto the target system
so you get cross compilers and cross assemblers 
what is the cross compiler and cross assembler here say for example if I am using an um compiler for a big microcontroller 
so that compiler would run maybe on a simple PC’s in a windows environment okay but so you write a C program you use that compiler to compile your C program and what you do generate 
it will generate the code for big microcontroller and that code has to be loaded on to your target board which has got the big microcontroller and it would get executed on that target board it will not be executed on the PC in which your compiler is running so this an example of a cross compiler
also you will find this compilers and assemblers have got various interesting features you have got compilers for a family of processors that means its just not targeting one processor but it is targeting variance of this processor

because this processor got very similar architecture there maybe some differences in the number of registers etcetera and that can be taken care of by the compiler by the appropriate input
also there are tools which also come as part of system software which a call emulators 
what are emulators you have got instructions to the emulators this instruction set emulators actually emulates your processors on another target machine 
there can be simple bevorial emulators       
that is its just emulates the um behavior of the target processor that’s it’s a simple implement the instruction set of the target processor 
in many cases you can also have a complete simulation environment where you can even do a timing analysis of your code on a host machine 
so these are the tools system software tools which had typically targeted for embedded system development 
there also other tools when you have got actually communication of the tool that means you have got some hardware as well as some software 
that means say for example you have got a target board so on a target board they are will be a simple software to execute your code and there will be another layer running on the PC 
because the Pc will be connected to the target board through a hardware connector that code that you are developed on the target board can be loaded via the connector on to the target board 
and then what will happen you can monitor execution of the code from the PC itself on the target code so this is a debugging tools 
so to summarize if you are talking about system software we are talking about what compilers in particular cross compilers and cross assemblers when you talk about emulators and simulators and we talk about debugging tools
so this system software set is obviously different from that what you expect for general purpose computing needs
on top of that we have OS the operating systems which are targeted for dedicated appliances and many times they do support real time scheduling capabilities
the next thing is application software obviously software’s are keep the flavors different kinds of flavors to the different devices although they may support the same system software  
take for example you may have the same operating system weak works running on your laser printer as well as maybe running on some other plants 
but application software in the laser printer is targeted for printing and um and it is supported on top of um OS which is targeted for embedded system 
although that OS can be present in multiple just a appliances but your application software would things which the functionality of this appliances 
lets look at the history of hardware evolution because that also have let to this status to the status of embedded system 
and the lower tense I have got general purpose microprocessor and microcontroller and in fact this arrow actually tells you which one of this cases you have got um with the time what does happened is you have got a faster clock rate and um that means what you have got faster execution speed also you have got more higher degree of integration that means more and more devices and peripherals have got integrated into the chip
and the general purpose microprocessor microcontroller what is the advantage of it you can get them of the self and using them you can develop a system so unary cost towards development of the processor is to minimized when you are using general purpose processors and microcontrollers for implementing an embedded system 

DSP that digital signal processor i am not talking about digital signal processing i am talking about the digital signal processor 
we have particularly required when your basic task is that of signal processing and there are variety of signal processor with different architecture which are today available
but obviously the cost of when you are using DSP will be more then that of a general purpose microcontroller in many cases its not although universally true

the way got application specific processor here what is happening is you are trying to look at designing a processor which may exactly suit you application need okay
so in this case obviously the unary cost is more and your application is search then you can permit this additional unary cost 
the kind of um this um list that is on top i have put system on chip SOC and SOC is um current frames and you will find in an SOC not only a single processor code but multiple processor codes ALU peripherals i getting integrated why because today you have the ability to do higher degree of integration 
an example as you see is um textes instrument omap processor which has got and  arm which is a risk processor as well as at ti DSP sitting inside the chip and they are and the entire communication and other peripheral also integrated into the same chip 
so currently you will find there are variety of issues is available the system on chips and you can understand when we are talking about the system it means not only a single processor and its peripherals 
but also a large number of peripherals along with even as special purpose coprocessors and even multiple processors being integrated together and to a single piece of silicon okay
so that means what if a if i have that that means i can a much more sophisticated functionality being implemented into an embedded system as single silicon would actually mean as smaller area 
and in many cases this um this associate a design in a power of the man faction and hence less canjancem of power    
software what are the typical characteristics of the application software and the operating systems that supports that means in an execution time what are the typical characteristics they should have 

the program must be logically and temporally correct logically correct means you all understand but the most important thing is temporal correctness in this case when we have real time consideration 
because i cannot do something correct at wrong time then the correctness as no mean 
obviously they must deal with inherent physical concurrency
in a general purpose computer we talk about concurrency simply because there maybe a multiple users multiple processors running 
here physically the um see the world is concurrent i have to support concurrency and along with reliability and fault tolerance obviously critical issues and here what we are trying to effort to this fault tolerance and reliability not only a software not only a hardware but that of software as well
and obviously the software has to application specific and single purpose 
lets look at this multitasking and concurrency 
we are all familiar with this definition this is just review so by multitasking is important for embedded systems need to deal with several inputs and outputs and multiple events can occur independently 

so an embedded system in many cases as exceptive to be multitasking and separating task can other issue is separating task simplifies your programming complexity 
but obviously if you are a multitasking system we need a kind of an OS kernel which would support switching back and forth that is switching of the processor between different tasks 
and concurrency is basically appearance of simultaneous execution of multiple tasks 
so lets take an example this is an example of a concurrency in temperature controller it’s a simple temperature controller on a famish    

and you can say that it is supposed to just control the temperature why should it handle concurrency 
just see why request to handle concurrency obviously it is monitoring temperature and depending on the temperature it is doing some settings but there are other issues which can come with it 
because depending on the time of the day the different temperature setting can be specified 
also the user can do some modification in the setting from the keypad 
so effectively these are three concurrent evens that can occur okay and these have been separated into three um concurrent processors or task and being handled in dependent 
so a very simple embedded system also request concurrency because the external world interact to the system in a concurrent fashion okay
so that’s why concurrent become a very important issue in this contest in just not um having multiple processors from multiple users being run on a general purpose system
so therefore what are the challenges in designing an embedded system 
first is how much hardware do we need 
what is the word size of the CPU what is the size of memory
it would definitely depend on what is the task that you are trying to handle 

then how do you meet our deadlines this is a one deadline on project deadlines but deadlines to be met for a real time system okay
faster hardware or cleverer software and in fact there maybe cases i might  write a clever software but it might not still meet my deadline on the CPU as incase executed 
i might require a first CPU but first CPU can mean extra cost so what you i do i try to get a compromise 
what can i do i mean design on an FPGA at dedicated function so i use a low cost CPU but that function which for which i can not meat the deadline using the software i design at dedicated logic on an FPGA or make it into an ACID and include that with my general purpose microcontroller

so this this is very important point when we are dealing with real time systems next issue is how do you minimize power
turn of unnecessary logic reduce memory access reducing memory access why each memory access will be to consumption of power 
when we discuss is power management issue later on we shall see why this issues come up
so these becomes an very important point to deal with when we are designing a system 
see if you look into it the global picture for an embedded system design just look at the hint which you are involved 
it is a multi objective why because we have just try to list some of these objectives dependability affordability safety security scalability timeliness 

we have already discussed the timeliness as an issue because i have to do computation in time it has to be dependable so its should not fail arbitrary it should have some kind of fault tolerance and graceful degradation 
it should be safe and secure it should not cause bordely hum to the users i am depending on market that we are looking tat it should be affordable 
therefore if these are the objectives in order to multi the objectives we require a kind of a multi disciplinary approach why  
one aspect is electronic hardware the other aspect is mechanical hardware we have already talked about the control algorithm is something absolutely important the other thing is humans on society or institutions 

the sociological aspect about accepting a product you can make a product but people may not accepting because it is not sociologically acceptable 
depending on norms of the society so the sociological perspective for introducing an a plans is very very important 
and these are the different life cycle events that is what you mean by life cycle how the embedded system gets developed 
i need to do requirements then i need to do a design look into manufacturing look into the deployment look into its logistics of maintaining the system and then requirement means how to draw the product 
because after introducing a product you cannot simply say that i wont support the product 
because you are a consumer you are invested money into in and you have to support there is a commitment to that product 
so the retirement plan of the product is also important
so the design objective is if you look into it so we have got a very important design goal in terms of performance the overall speed and deadlines 

then functionality and user interface manufacturing cost power consumption physical size these are very very important 
look into it because these are um these are not always obvious i may just give you the performance as a criteria 
but your with and power consumption although related to this have to be satisfied otherwise your product is non be acceptability in the market you cannot may a digital camera which would way maybe ten KBs nobody will buy it okay
so we talk about therefore functional and non functional requirements why 

because functional requirement is what is output as a function of input that’s how you specify embedded system
and what are the non-functional requirements     
non-functional requirements is a time size power consumption reliability etcetera and these also should therefore form part of your design goal and design objective 
i cannot ignore them because non-functional requirement at times a very very important for acceptance of a an appliances are a embedded system  
so this design development process that that the life cycle that i was talking about so i start with requirements else of a specification then go through the architecture that is design an architecture

that is this architecture is a block level architecture then you look at component level design then you look at system integration and what I have not yet shown is basically testing face 
because testing is a very very important component for an embedded system             

because it is know on that for an for your OS on a general purpose computing if it if you find a bug later on you can download a patch fine 
and you can rectify that um bug in the OS say for example 
but incase of an embedded system that flexibility is not with you 
you are giving that product to the user and user is expect to use for ever and user is also not expect to be a computer save that you will connect to the internet and download the patch 
so these systems have to very carefully tested and the bug for hardware as well as software faults 
the design approaches can be top down or bottom up just like any software design here also this issues comes up 
in a top down design you start from the most abstract description and work down to the most detailed level 

the bottom up design which is also very very common in terms of embedded system design um strategies
you work from small component to big system 
because in many cases when some bodies developing a product you have got parts of it already develop with you 
maybe some of the component from previous system because its availability you would like to use this component
so you try to go through a bottom up process and in fact any real design actually involves both 
the other important issue is that our step wise requirement 
what ever we talked you know about the software development here is equally applicable and here we not just talking about software development but we are talking about both hardware as well as the software development 
and you realize i think by now that this hardware and software development for an embedded system go handing hand 
i cannot really separate things out because you have seen that if some if i cannot meet at deadline by using the pure software on a general purpose microcontroller i might need to design a special purpose hardware 
and in fact that is exactly leads as to what is known as software hardware um who designing software hardware partitioning and those approaches 

so the step wise requirement what we have talking about is stepwise refinement of both hardware as well as sort of the software and what does that mean um stepwise requirement of the system as a hole
 so therefore we come to this um concluding remark  because what we are show for covered is abroad overview um introductory overview of what is an embedded system 
so what we think we have seen is um we have got various appliances which are embedded systems 
in fact some body made this statement that today we have more microcontrollers and microprocessors at home then computers all around us 
its absolutely true because you have your washing machine you have viewer microwave your cell phone a viewer um TV you have your um PDs everything have an embedded system everything has got microprocessor or a microcontroller setting inside 
and you using it so embedded computers and embedded systems are everywhere and we need to move how to design them that’s the basic issue 

and therefore embedded system goes mainly design challenges design time deadlines and power and that’s precisely reason why you need to deal with its in a specific way okay
and you have also realize that embedded systems in what way a different form a general purpose computers 
although the basic principles are very similar but in many ways its different
so our design methodology and the principles which course into design as well as characteristics of components which are used an embedded systems are expected to the different
and we have seen also the design methodologies help us mange the design process perfect
you have any questions 
if you don’t have questions so we shall end this lecture here in the next class we shall start our discussion on embedded hardware in particular processors                   
    
